version: '2'
services:
  zookeeper:
    image: spiside/kafka-cluster
    hostname: zookeeper
    networks:
      static-network:
        ipv4_address: 172.20.128.2
    ports:
      - 2181
    environment:
      RUN_TYPE: "zookeeper"
  kafka:
    depends_on:
      - zookeeper
    image: spiside/kafka-cluster
    hostname: kafka
    networks:
      static-network:
        ipv4_address: 172.20.128.3
    ports:
      - 9092
    environment:
      RUN_TYPE: "kafka"
    links:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/docker.sock
  master:
    build:
      context: .
    image: gettyimages/spark:2.2
    container_name: master
    command: bin/spark-class org.apache.spark.deploy.master.Master -h master
    hostname: master
    networks:
      static-network:
        ipv4_address: 172.20.128.4
    environment:
      MASTER: spark://master:7077
      SPARK_CONF_DIR: /conf
      SPARK_PUBLIC_DNS: localhost
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    links:
        - zookeeper
    volumes:
      - ./spark/conf/master:/conf
      - ./spark/data:/tmp/data
      - ../build/libs/:/tmp/java
  worker:
    depends_on:
        - master
    build:
        context: .
    image: gettyimages/spark:2.2
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077
    hostname: worker1
    networks:
          static-network:
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 3
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
    links:
      - master
      - zookeeper
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8881
      - 8081
    volumes:
      - ./spark/conf/worker:/conf
      - ./spark/data:/tmp/data
      - ../build/libs/:/tmp/java
#  mysql:
#    image: mysql
#    hostname: mysql
#    networks:
#      static-network:
#        ipv4_address: 172.20.128.100
#    volumes:
#      - ./mysql:/var/lib/mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#    ports:
#      - 3306:3306
#  adminer:
#    image: adminer
#    hostname: adminer
#    networks:
#      static-network:
#        ipv4_address: 172.20.128.101
#    #restart: always
#    expose:
#      - 8180
#    ports:
#      - 8180:8080
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    container_name: elasticsearch
    hostname: elasticsearch
    networks:
      static-network:
        ipv4_address: 172.20.128.102
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    links:
      - zookeeper
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.2
    container_name: kibana
    hostname: kibana
    networks:
      static-network:
        ipv4_address: 172.20.128.103
    environment:
      - SERVER_HOST=0.0.0.0
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
  headPlugin:
    image: mobz/elasticsearch-head:5
    container_name: head_540
    ports:
      - 9100:9100

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
          ip_range: 172.28.5.0/24